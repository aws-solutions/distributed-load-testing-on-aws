// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DLT API Test 1`] = `
{
  "Outputs": {
    "TestAPIDLTApiEndpointF4A49BAE": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "TestAPIDLTApi434DC190",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "TestAPIDLTApiDeploymentStageprodA10AE629",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": {
    "TestAPIAPIAllRequestValidator9A179146": {
      "Properties": {
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
      },
      "Type": "AWS::ApiGateway::RequestValidator",
    },
    "TestAPIAPILoggingRoleA1147DD8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvent",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "apiLoggingPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestAPIAPILogsF31ED289": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "KMS encryption unnecessary for log group",
            },
          ],
        },
      },
      "Properties": {
        "RetentionInDays": 365,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "TestAPIApiAccountConfig56C718B5": {
      "DependsOn": [
        "TestAPIDLTApi434DC190",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "TestAPIAPILoggingRoleA1147DD8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "TestAPIDLTAPIServicesLambda1C09DECC": {
      "DependsOn": [
        "TestAPIDLTAPIServicesLambdaRole446F20B1",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "CloudWatchLogsPolicy covers a permission to write CloudWatch logs.",
            },
            {
              "id": "W89",
              "reason": "VPC not needed for lambda",
            },
            {
              "id": "W92",
              "reason": "Does not run concurrent executions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": "test-bucket-region",
          "S3Key": "testPrefix//api-services.zip",
        },
        "Description": "API microservices for creating, updating, listing and deleting test scenarios",
        "Environment": {
          "Variables": {
            "HISTORY_TABLE": "testHistoryDDBTable",
            "METRIC_URL": "http://testurl.com",
            "SCENARIOS_BUCKET": "testScenarioBucketName",
            "SCENARIOS_TABLE": "testDDBTable",
            "SEND_METRIC": "Yes",
            "SOLUTION_ID": "testId",
            "STACK_ID": {
              "Ref": "AWS::StackId",
            },
            "STATE_MACHINE_ARN": "arn:aws:states:us-east-1:111122223333:stateMachine:HelloWorld-StateMachine",
            "TASK_CANCELER_ARN": "arn:aws:lambda:us-east-1:111122223333:function:HelloFunction",
            "UUID": "abc123",
            "VERSION": "testVersion",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TestAPIDLTAPIServicesLambdaRole446F20B1",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestAPIDLTAPIServicesLambdaDLTApiInvokePermissionFDC1055F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TestAPIDLTAPIServicesLambda1C09DECC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "TestAPIDLTApi434DC190",
              },
              "/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TestAPIDLTAPIServicesLambdaRole446F20B1": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "ecs:ListTasks and cloudformation:ListExports do not support resource level permissions",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "ecs:ListTasks",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ecs:RunTask",
                    "ecs:DescribeTasks",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ecs:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":task/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ecs:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":task-definition/",
                        ],
                      ],
                    },
                  ],
                },
                {
                  "Action": "iam:PassRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::1234567890:role/MyRole-AJJHDSKSDF",
                },
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": "arn:aws:states:us-east-1:111122223333:stateMachine:HelloWorld-StateMachine",
                },
                {
                  "Action": "logs:DeleteMetricFilter",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "TestLogGroup4EEF7AD4",
                      "Arn",
                    ],
                  },
                },
                {
                  "Action": "cloudwatch:DeleteDashboards",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":cloudwatch::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":dashboard/EcsLoadTesting*",
                      ],
                    ],
                  },
                },
                {
                  "Action": "cloudformation:ListExports",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": [
                    "ecs:ListAccountSettings",
                    "ecs:ListTasks",
                    "ecs:ListClusters",
                    "ecs:DescribeClusters",
                    "ecs:DescribeTaskDefinition",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "servicequotas:GetServiceQuota",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "DLTAPIServicesLambdaPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestAPIDLTApi434DC190": {
      "Properties": {
        "Description": "Distributed Load Testing API - version testVersion",
        "EndpointConfiguration": {
          "Types": [
            "EDGE",
          ],
        },
        "Name": "DLTApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "TestAPIDLTApiAccount780DB186": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "TestAPIDLTApi434DC190",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "TestAPIDLTApiCloudWatchRole67C0F1C4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "TestAPIDLTApiCloudWatchRole67C0F1C4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "TestAPIDLTApiDeployment7935ADA27d567a21f4c19426fb338f10f77fd745": {
      "DependsOn": [
        "TestAPIAPIAllRequestValidator9A179146",
        "TestAPIDLTApiOPTIONS380FFB97",
        "TestAPIDLTApiregionsANYC5A4C4FB",
        "TestAPIDLTApiregionsOPTIONSB6A98797",
        "TestAPIDLTApiregionsFB81DCC6",
        "TestAPIDLTApiscenariostestIdANY5DE40CF0",
        "TestAPIDLTApiscenariostestIdOPTIONSF10FECFD",
        "TestAPIDLTApiscenariostestId0D5FBA86",
        "TestAPIDLTApiscenariosANYEC9F0ED6",
        "TestAPIDLTApiscenariosOPTIONS6968DE71",
        "TestAPIDLTApiscenariosB730E59C",
        "TestAPIDLTApitasksANYA8531185",
        "TestAPIDLTApitasksOPTIONS151B5B68",
        "TestAPIDLTApitasksF74AF050",
        "TestAPIDLTApivCPUDetailsANY6A8016A7",
        "TestAPIDLTApivCPUDetailsOPTIONS03B0AAEA",
        "TestAPIDLTApivCPUDetails165FD529",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W68",
              "reason": "The solution does not require the usage plan.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "Distributed Load Testing API - version testVersion",
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "TestAPIDLTApiDeploymentStageprodA10AE629": {
      "DependsOn": [
        "TestAPIDLTApiAccount780DB186",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W64",
              "reason": "The solution does not require the usage plan.",
            },
          ],
        },
      },
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "TestAPIAPILogsF31ED289",
              "Arn",
            ],
          },
          "Format": "{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","user":"$context.identity.user","caller":"$context.identity.caller","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}",
        },
        "DeploymentId": {
          "Ref": "TestAPIDLTApiDeployment7935ADA27d567a21f4c19426fb338f10f77fd745",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "TestAPIDLTApiOPTIONS380FFB97": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "TestAPIDLTApi434DC190",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApiregionsANYC5A4C4FB": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "TestAPIDLTAPIServicesLambda1C09DECC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": {
          "Ref": "TestAPIAPIAllRequestValidator9A179146",
        },
        "ResourceId": {
          "Ref": "TestAPIDLTApiregionsFB81DCC6",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApiregionsFB81DCC6": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestAPIDLTApi434DC190",
            "RootResourceId",
          ],
        },
        "PathPart": "regions",
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestAPIDLTApiregionsOPTIONSB6A98797": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "TestAPIDLTApiregionsFB81DCC6",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApiscenariosANYEC9F0ED6": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "TestAPIDLTAPIServicesLambda1C09DECC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": {
          "Ref": "TestAPIAPIAllRequestValidator9A179146",
        },
        "ResourceId": {
          "Ref": "TestAPIDLTApiscenariosB730E59C",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApiscenariosB730E59C": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestAPIDLTApi434DC190",
            "RootResourceId",
          ],
        },
        "PathPart": "scenarios",
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestAPIDLTApiscenariosOPTIONS6968DE71": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "TestAPIDLTApiscenariosB730E59C",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApiscenariostestId0D5FBA86": {
      "Properties": {
        "ParentId": {
          "Ref": "TestAPIDLTApiscenariosB730E59C",
        },
        "PathPart": "{testId}",
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestAPIDLTApiscenariostestIdANY5DE40CF0": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "TestAPIDLTAPIServicesLambda1C09DECC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": {
          "Ref": "TestAPIAPIAllRequestValidator9A179146",
        },
        "ResourceId": {
          "Ref": "TestAPIDLTApiscenariostestId0D5FBA86",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApiscenariostestIdOPTIONSF10FECFD": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "TestAPIDLTApiscenariostestId0D5FBA86",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApitasksANYA8531185": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "TestAPIDLTAPIServicesLambda1C09DECC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": {
          "Ref": "TestAPIAPIAllRequestValidator9A179146",
        },
        "ResourceId": {
          "Ref": "TestAPIDLTApitasksF74AF050",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApitasksF74AF050": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestAPIDLTApi434DC190",
            "RootResourceId",
          ],
        },
        "PathPart": "tasks",
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestAPIDLTApitasksOPTIONS151B5B68": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "TestAPIDLTApitasksF74AF050",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApivCPUDetails165FD529": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestAPIDLTApi434DC190",
            "RootResourceId",
          ],
        },
        "PathPart": "vCPUDetails",
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestAPIDLTApivCPUDetailsANY6A8016A7": {
      "Properties": {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "TestAPIDLTAPIServicesLambda1C09DECC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "StatusCode": "200",
          },
        ],
        "RequestValidatorId": {
          "Ref": "TestAPIAPIAllRequestValidator9A179146",
        },
        "ResourceId": {
          "Ref": "TestAPIDLTApivCPUDetails165FD529",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPIDLTApivCPUDetailsOPTIONS03B0AAEA": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "TestAPIDLTApivCPUDetails165FD529",
        },
        "RestApiId": {
          "Ref": "TestAPIDLTApi434DC190",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestAPILambdaApiEventsPolicyEADD5133": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "events:PutTargets",
                "events:PutRule",
                "events:DeleteRule",
                "events:RemoveTargets",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":events:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":rule/*Scheduled",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":events:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":rule/*Create",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "events:ListRules",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":rule/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestAPILambdaApiEventsPolicyEADD5133",
        "Roles": [
          {
            "Ref": "TestAPIDLTAPIServicesLambdaRole446F20B1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestAPILambdaApiPermissionPolicy195B9388": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:AddPermission",
                "lambda:RemovePermission",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestAPIDLTAPIServicesLambda1C09DECC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestAPILambdaApiPermissionPolicy195B9388",
        "Roles": [
          {
            "Ref": "TestAPIDLTAPIServicesLambdaRole446F20B1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestLogGroup4EEF7AD4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "TestPolicyCC05E598": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:Get*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestPolicyCC05E598",
        "Roles": [
          {
            "Ref": "TestAPIDLTAPIServicesLambdaRole446F20B1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
